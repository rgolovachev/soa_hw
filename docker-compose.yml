services:
  auth:
    container_name: auth
    build:
      context: ./auth
      dockerfile: auth.dockerfile
    ports:
      - 8080:8080
    volumes:
      - ./posts:/posts
    depends_on:
      - auth_db
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
  auth_db:
    container_name: auth_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: super_secret_pass
    ports:
      - :5432
    volumes:
      - ./auth/init.sql:/docker-entrypoint-initdb.d/init.sql
  posts:
    container_name: posts
    build:
      context: ./posts
      dockerfile: posts.dockerfile
    ports:
      - 11777:11777
    depends_on:
      - posts_db
  posts_db:
    container_name: posts_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: posts_db
      POSTGRES_USER: posts
      POSTGRES_PASSWORD: super_secret_pass
    ports:
      - :5432
    volumes:
      - ./posts/init.sql:/docker-entrypoint-initdb.d/init.sql
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  stat:
    container_name: stat
    build:
      context: ./stat
      dockerfile: stat.dockerfile
    ports:
      - 8081:8081
    depends_on:
      - kafka
      - clickhouse
    volumes:
      - ./posts:/posts
    environment:
      KAFKA_BROKER: kafka:9092
      CLICKHOUSE_URL: clickhouse:9000
  clickhouse:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP интерфейс
      - "9000:9000"  # клиентский TCP интерфейс
    volumes:
      - ./stat/init.sql:/docker-entrypoint-initdb.d/init.sql
