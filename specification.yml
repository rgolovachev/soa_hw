openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
paths:
  /register:
    post:
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User has been registered
        '409':
          description: User with this name already registered
        '400':
          description: Failed to decode json OR There is no username or password field in JSON, or one of them (or both) is empty
        '500':
          description: Some error from postgres
  /update:
    put:
      summary: Update user data
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  nullable: true
                lastName:
                  type: string
                  nullable: true
                birthDate:
                  type: string
                  nullable: true
                email:
                  type: string
                  nullable: true
                telephone:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Data was updated
        '400':
          description: Failed to decode json OR User must specify Cookie header
        '403':
          description: Cookie is invalid
        '500':
          description: Some error from postgres
  /login:
    post:
      summary: Auth user with login and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User has been logined successfully
          headers:
            Set-Cookie:
              description: User login token
              schema:
                type: string
        '400':
          description: Failed to decode json OR There is no username or password field in JSON, or one of them (or both) is empty
        '404':
          description: There is no such user or password is wrong
        '500':
          description: Some error from postgres
  /create_post:
    post:
      summary: Create post
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Post has been created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id:
                    type: string
        '403':
          description: Cookie is invalid
        '500':
          description: Some internal error (with postgres, for example)
  /view_post/{post_id}:
    post:
      summary: View post
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          required: true
          description: post_id
          schema:
            type: string
      responses:
        '200':
          description: Post was viewed successfuly
        '403':
          description: Cookie is invalid
        '404':
          description: Post not found
        '500':
          description: Some internal error (with postgres, for example)
  /like_post/{post_id}:
    post:
      summary: Like post
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          required: true
          description: post_id
          schema:
            type: string
      responses:
        '200':
          description: Post was liked successfuly
        '403':
          description: Cookie is invalid
        '404':
          description: Post not found
        '500':
          description: Some internal error (with postgres, for example)
  /update_post/{post_id}:
    put:
      summary: Update post
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          required: true
          description: post_id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Post has been updated succesfully
        '403':
          description: Cookie is invalid
        '404':
          description: There is no such user with this post_id
        '500':
          description: Some internal error (with postgres, for example)
  /delete_post/{post_id}:
    delete:
      summary: Delete post
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          required: true
          description: post_id
          schema:
            type: string
      responses:
        '200':
          description: Post has been deleted succesfully
        '403':
          description: Cookie is invalid
        '404':
          description: There is no such user with this post_id
        '500':
          description: Some internal error (with postgres, for example)
  /get_post/{post_id}:
    get:
      summary: Get post
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          required: true
          description: post_id
          schema:
            type: string
      responses:
        '200':
          description: Post text has been extracted succesfully
          content:
            text/plain:
              schema:
                type: string
        '403':
          description: Cookie is invalid
        '404':
          description: Post not found
        '500':
          description: Some internal error (with postgres, for example)
  /get_posts/{username}:
    get:
      summary: Get all posts of some user
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: From
          in: header
          schema:
            type: integer
          description: Starting index for posts
          required: true
        - name: Count
          in: header
          schema:
            type: integer
          description: Number of posts to return
          required: true
        - name: username
          in: path
          required: true
          description: username
          schema:
            type: string

      responses:
        '200':
          description: Posts texts and its ids has been extracted succesfully
          content:
            text/plain:
              schema:
                type: string
        '403':
          description: Cookie is invalid
        '404':
          description: There is no such user
        '500':
          description: Some internal error (with postgres, for example)
  /post_stats/{post_id}:
    get:
      summary: Get post stats
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: post_id
          in: path
          required: true
          description: post_id
          schema:
            type: string
      responses:
        '200':
          description: Post stats have been extracted succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id:
                    type: string
                  likes:
                    type: integer
                  views:
                    type: integer
        '403':
          description: Cookie is invalid
        '404':
          description: Post not found
        '500':
          description: Some internal error (with postgres, for example)
  /top_posts/{sort_by}:
    get:
      summary: Get top 5 posts by likes or views
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
        - name: sort_by
          in: path
          required: true
          description: sort_by may be either likes or views
          schema:
            type: string
      responses:
        '200':
          description: Post stats have been extracted succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id_0:
                    type: string
                  value_0:
                    type: integer
                  post_id_1:
                    type: string
                  value_1:
                    type: integer
                  post_id_2:
                    type: string
                  value_2:
                    type: integer
                  post_id_3:
                    type: string
                  value_3:
                    type: integer
                  post_id_4:
                    type: string
                  value_4:
                    type: integer
        '400':
          description: sort_by parameter is invalid
        '403':
          description: Cookie is invalid
        '500':
          description: Some internal error (with postgres, for example)
  /top_users:
    get:
      summary: Get top 3 users by likes
      parameters:
        - name: Cookie
          in: header
          description: auth token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post stats have been extracted succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username_0:
                    type: string
                  value_0:
                    type: integer
                  username_1:
                    type: string
                  value_1:
                    type: integer
                  username_2:
                    type: string
                  value_2:
                    type: integer
        '403':
          description: Cookie is invalid
        '500':
          description: Some internal error (with postgres, for example)